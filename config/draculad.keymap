/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/*
#undef ZMK_BEHAVIORS_KEEP_ALL   //ZMK STUDIO

#define ZMK_BEHAVIORS_KEEP_SK   //ZMK Studio
#define ZMK_BEHAVIORS_KEEP_MT   //ZMK Studio
#define ZMK_BEHAVIORS_KEEP_KT   //ZMK Studio
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

// Layers

#define DEFAULT 0
#define NAV 1
#define Mouse 2
#define SYM 3
#define ADJUST 4

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        hplt: hold_preferred-lt {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_PREFERRED_LT";
            #binding-cells = <2>;
            tapping-term-ms = <195>;
            quick-tap-ms = <0>;
            flavor = "hold-preferred";
            bindings = <&mo>, <&kp>;
        };

        hms: homerow_mod_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MOD_SHIFT";
            #binding-cells = <2>;
            tapping-term-ms = <170>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };

        Td_d: Td_d {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_D";
            #binding-cells = <0>;
            bindings = <&kp P>, <&kp LEFT_BRACKET>;

            tapping-term-ms = <300>;
        };

        Td_O: Td_O {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_O";
            #binding-cells = <0>;
            bindings = <&kp O>, <&kp MINUS>;

            tapping-term-ms = <300>;
        };

        Td_i: Td_i {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_I";
            #binding-cells = <0>;
            bindings = <&kp I>, <&i>;

            tapping-term-ms = <300>;
        };

        Td_e: Td_e {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_E";
            #binding-cells = <0>;
            bindings = <&kp E>, <&e>;

            tapping-term-ms = <300>;
        };

        Td_u: Td_u {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_U";
            #binding-cells = <0>;
            bindings = <&kp U>, <&u>;

            tapping-term-ms = <300>;
        };

        Td_y: Td_y {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_Y";
            #binding-cells = <0>;
            bindings = <&kp Y>, <&y>;

            tapping-term-ms = <300>;
        };

        Td_a: Td_a {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_A";
            #binding-cells = <0>;
            bindings = <&hm LEFT_CONTROL A>, <&a>;

            tapping-term-ms = <300>;
        };
    };

    /* KEY POSITIONS
        ╭────────────────────╮ ╭────────────────────╮
        │  0   1   2   3   4 │ │  5   6   7   8   9 │
        │ 10  11  12  13  14 │ │ 15  16  17  18  19 │
        │ 20  21  22  23  24 │ │ 25  26  27  28  29 │
        ╰───────╮         30 │ │ 31       ╭─────────╯
                │ 32  33  34 │ │ 35 36 37 │
                ╰────────────╯ ╰──────────╯
        */

    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        combo_capslock {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp CAPSLOCK>;
        };

        combo_enter {
            timeout-ms = <50>;
            key-positions = <18 19>;
            bindings = <&kp ENTER>;
        };

        combo_copy {
            timeout-ms = <50>;
            key-positions = <13 23>;
            bindings = <&kp LG(C)>;
        };

        combo_paste {
            timeout-ms = <50>;
            key-positions = <16 26>;
            bindings = <&kp LG(V)>;
        };

        combo_parens_left {
            timeout-ms = <50>;
            key-positions = <3 13>;
            bindings = <&kp LEFT_PARENTHESIS>;
        };

        combo_parens_right {
            timeout-ms = <50>;
            key-positions = <6 16>;
            bindings = <&kp RIGHT_PARENTHESIS>;
        };

        Volume_up {
            bindings = <&kp C_VOLUME_UP>;
            key-positions = <2 1>;
        };

        Volume_Down {
            bindings = <&kp C_VOL_DN>;
            key-positions = <22 21>;
        };
    };

    macros {
        a: a {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SINGLE_QUOTE &kp A>;
            label = "A";
        };

        o: o {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SINGLE_QUOTE &kp O>;
            label = "O";
        };

        i: i {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SINGLE_QUOTE &kp I>;
            label = "I";
        };

        e: e {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SINGLE_QUOTE &kp E>;
            label = "E";
        };

        u: u {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SINGLE_QUOTE &kp U>;
            label = "U";
        };

        y: y {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SINGLE_QUOTE &kp Y>;
            label = "Y";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default {
            /*
                                Q       W       E       R       T       Y       U       I       O       P
                                A       S       D       F       G       H       J       K       L       ;
                                Z       X       C       V       B       N       M       ,       .       /
                                                TAB     TAB     BSPC    SPC     TAB     TAB
                        */
            // COLEMAK default

            bindings = <
&kp Q               &kp W       &kp E       &kp R         &kp T                                                &kp Y      &kp U         &kp I       &Td_O       &Td_d
&hm LEFT_CONTROL A  &hm LALT S  &hm LGUI D  &hms LSHFT F  &kp G                                                &kp H      &hms RSHFT J  &hm RGUI K  &hm RALT L  &hm RCTRL SEMICOLON
&mt SINGLE_QUOTE Z  &kp X       &kp C       &kp V         &kp B          &kp C_PLAY_PAUSE    &kp C_PLAY_PAUSE  &kp N      &kp M         &kp COMMA   &kp DOT     &mt SINGLE_QUOTE SLASH
                                            &lt 1 TAB     &kp BACKSPACE  &lt 2 BACKSPACE     &kp SPACE         &kp SPACE  &kp RETURN
            >;

            // QWERTY, if that's how you roll
            // bindings = <
            //         &kp Q           &kp W           &kp E           &kp R           &kp T   &kp Y   &kp U           &kp I           &kp O           &kp P
            //         &hm LCTRL A     &hm LALT S      &hm LGUI D      &hms LSHFT F    &kp G   &kp H   &hms RSHFT J    &hm RGUI K      &hm RALT L      &hm RCTRL SEMI
            //         &kp Z           &kp X           &kp C           &kp V           &kp B   &kp N   &kp M           &kp COMMA       &kp DOT         &kp FSLH
            //                         &kp TAB         &kp TAB         &kp BSPC        &kp SPC &kp TAB &kp TAB
            // >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        NAV {
            bindings = <
&trans  &trans          &kp UP_ARROW    &trans           &trans                    &trans         &kp N7        &kp NUMBER_8  &kp NUMBER_9  &kp EQUAL
&trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans                    &trans         &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp BACKSLASH
&trans  &trans          &trans          &trans           &trans  &trans    &trans  &trans         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp DOT
                                        &tog 0           &trans  &trans    &trans  &kp BACKSPACE  &kp NUMBER_0
            >;
        };

        Mouse {
            bindings = <
&trans  &trans          &mmv MOVE_UP    &trans           &msc SCRL_UP                      &trans  &trans  &trans  &trans  &trans
&trans  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_DOWN                    &trans  &trans  &trans  &trans  &trans
&trans  &trans          &trans          &trans           &trans          &trans    &trans  &trans  &trans  &trans  &trans  &trans
                                        &trans           &trans          &trans    &trans  &trans  &trans
            >;
        };
    };
};
